{"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/blob/2021/05/29/hello-world/"},{"title":"icarus-user-definition","text":"CommandTool123npm install hexo-deployer-git --savenpm install -S hexo-theme-icarus hexo-renderer-infernonpm install hexo-renderer-marked --save Accelarate in China12npm --registry=https://registry.npm.taobao.org install ......npm config set registry https://registry.npm.taobao.org Generate, See, and Deploy12345hexo inithexo cleanhexo ghexo shexo d 1hexo new page &quot;gallery&quot; Referencehttps://astrobear.top/2021/08/23/Hexo%E4%B8%BB%E9%A2%98Icarus%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89/#Icarus%E7%9A%84%E5%8D%87%E7%BA%A7%E8%BF%87%E7%A8%8B https://github.com/hexojs/hexo-renderer-marked in _config.yml 123marked: prependRoot: true postAsset: true","link":"/blob/2021/12/19/icarus-user-definition/"},{"title":"slam-datasets","text":"Dataset Institution Year GNSS (Raw) IMU Camera LiDAR UWB Ground Truth Platform GRACO SYSU 2023 √ (×) √ √ √ √ UAV/UGV Hilti Hilti 2023 √ √ √ √ Hand/UGV GVINS HKUST 2022 √ (√) √ √ √ Hand/Car VIRAL NTU 2022 √ √ √ √ √ UAV SJTU_GVI SJTU 2022 √ (√) √ √ √ Car UrbanNav PolyU 2022 √ (√) √ √ √ √ Car FusionPortable HKUST 2022 √ (×) √ √ √ √ Hand Marine Perception MIT 2022 √(×) √ √ √ √ Canoe Hilti Hilti 2022 √ √ √ √ Hand Insane University of Klagenfurt 2022 √(×) √ √ √ √ UAV Visual-Inertial-LiDAR Leibniz Universität Hannover 2022 √ √ √ Car VECtor ShanghaiTech University 2022 √ √ √ √ Hand M2DGR SJTU 2021 √ (√) √ √ √ √ UGV Hilti Hilti 2021 √ √ √ √ Hand UTBM UTBM 2020 √ (×) √ √ √ √ Car UrbanLoco PolyU 2020 √ (√) √ √ √ √ Car TEX-CUP University of Texas Austin 2020 √(√) √ √ √ Car Kaist Urban KAIST 2019 √ (×) √ √ √ √ Car TUM VI TUM 2019 √ √ √ UGV FPV ETH 2019 √ √ √ UAV Canoe University of Illinois Board of Trustees 2018 √ √ √ Canoe MVSEC University of Pennsylvania 2018 √ √ √ √ Car/Motorbike/UAV/Hand Zurich MAV ETH 2017 √ (×) √ √ √ UAV Ford Ford 2017 √ (×) √ √ √ √ Car KITTI KIT 2016 √ (×) √ √ √ √ Car Robotcar Oxford 2016 √ (×) √ √ √ √ Car EuRoC ETH 2016 √ √ UAV Maplab ETH 2016 √ √ Hand","link":"/blob/2023/03/01/slam-datasets/"},{"title":"seaborn-objects","text":"IntroductionSeaborn is a Python data visualization library based on matplotlib. It provides a high-level interface for drawing attractive and informative statistical graphics. Seaborn website: https://seaborn.pydata.org/ Seaborn Github: https://github.com/mwaskom/seaborn DependenciesSeaborn supports Python 3.8+. Installation requires numpy, pandas, and matplotlib. Some advanced statistical functionality requires scipy and/or statsmodels. Installation1pip install seaborn Object InterfaceIn version 0.12, Seaborn introduced object namespace and interface, which are based on the Grammar of Graphics similiar to ggplot2 package in R. In the past, the best python package was plotnine that was absolutely consistent with ggplot2. ExampleBasic Plot12345678910import seabornimport seaborn.objects as sotips=seaborn.load_dataset(&quot;tips&quot;)( so.Plot(tips, y=&quot;day&quot;, color=&quot;sex&quot;) .add(so.Bar(), so.Hist(), so.Dodge()) .show()) Then figure will be like this If you want to save the figure, just run 12345678910import seaborn as snsimport seaborn.objects as sotips=sns.load_dataset(&quot;tips&quot;)( so.Plot(tips, y=&quot;day&quot;, color=&quot;sex&quot;) .add(so.Bar(), so.Hist(), so.Dodge()) .save(&quot;fig.pdf&quot;,bbox_inches=&quot;tight&quot;) ## save) bbox_inches=”tight” is necessary for saving legend like R. Facet1234567891011import seaborn as snsimport seaborn.objects as sopenguins=sns.load_dataset(&quot;penguins&quot;)( so.Plot(penguins, &quot;bill_length_mm&quot;, &quot;bill_depth_mm&quot;) .add(so.Dots()) .facet(&quot;species&quot;, &quot;sex&quot;) .show()) Theme and Palette12345678910111213141516import seaborn as snsimport seaborn.objects as soimport matplotlib.pyplot as pltsns.set_theme(style=&quot;white&quot;, palette=&quot;deep6&quot;) ## settingstips=sns.load_dataset(&quot;tips&quot;)( so.Plot(tips, &quot;total_bill&quot;, &quot;tip&quot;, color=&quot;day&quot;) .facet(col=&quot;day&quot;) .add(so.Dot(color=&quot;#aabc&quot;), col=None, color=None) .add(so.Dot()) .theme(plt.rcParams) ## important .show()) Referencehttps://seaborn.pydata.org/api.html#objects-api https://seaborn.pydata.org/tutorial/objects_interface.html","link":"/blob/2023/01/31/seaborn-objects/"}],"tags":[{"name":"Blob","slug":"Blob","link":"/blob/tags/Blob/"},{"name":"Dataset","slug":"Dataset","link":"/blob/tags/Dataset/"},{"name":"Tools","slug":"Tools","link":"/blob/tags/Tools/"}],"categories":[{"name":"Blob","slug":"Blob","link":"/blob/categories/Blob/"},{"name":"Research","slug":"Research","link":"/blob/categories/Research/"}],"pages":[{"title":"gallery","text":"Under developing…","link":"/blob/gallery/index.html"},{"title":"about","text":"You can find my profile here.","link":"/blob/about/index.html"}]}